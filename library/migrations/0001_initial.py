# Generated by Django 5.0 on 2024-01-02 23:12

import colorfield.fields
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('category', models.CharField(choices=[('console', 'Console'), ('pc', 'PC'), ('service', 'Service'), ('mobile', 'Mobile')], max_length=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='library/platform_images')),
                ('box_color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=25, null=True, samples=None)),
                ('font_color', colorfield.fields.ColorField(blank=True, default='#fafafa', image_field=None, max_length=25, null=True, samples=None)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='platform', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ConsolePlatform',
            fields=[
                ('platform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='library.platform')),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
            ],
            bases=('library.platform',),
        ),
        migrations.CreateModel(
            name='MobilePlatform',
            fields=[
                ('platform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='library.platform')),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('operative_systems', models.CharField(choices=[('OS', 'OS'), ('Android', 'Android')], max_length=50)),
            ],
            bases=('library.platform',),
        ),
        migrations.CreateModel(
            name='PCPlatform',
            fields=[
                ('platform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='library.platform')),
                ('operative_systems', models.CharField(choices=[('Windows', 'Windows'), ('Linux', 'Linux'), ('MacOS', 'MacOS'), ('Android', 'Android')], max_length=50)),
                ('gpu', models.CharField(blank=True, max_length=255, null=True)),
                ('cpu', models.CharField(blank=True, max_length=255, null=True)),
                ('ram', models.IntegerField(blank=True, null=True)),
                ('disk_size', models.IntegerField(blank=True, null=True)),
                ('disk_type', models.CharField(blank=True, choices=[('HDD', 'HDD'), ('SSD', 'SSD')], max_length=10, null=True)),
            ],
            bases=('library.platform',),
        ),
        migrations.CreateModel(
            name='ServicePlatform',
            fields=[
                ('platform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='library.platform')),
                ('subscription_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('plan', models.CharField(blank=True, max_length=255, null=True)),
            ],
            bases=('library.platform',),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('user_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('metacritic_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('image', models.ImageField(blank=True, null=True, upload_to='library/game_images')),
                ('user_review', models.TextField(blank=True, null=True)),
                ('genres', models.CharField(blank=True, max_length=255, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('completion_date', models.DateField(auto_now_add=True, null=True)),
                ('hours_spent', models.IntegerField(blank=True, null=True)),
                ('developer', models.CharField(blank=True, max_length=255, null=True)),
                ('platform', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='games', to='library.platform')),
            ],
            options={
                'ordering': ['platform'],
                'unique_together': {('name', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('game_name', models.CharField(max_length=255)),
                ('game_image', models.ImageField(blank=True, null=True, upload_to='library/wishlist_images')),
                ('game_genres', models.CharField(blank=True, max_length=255, null=True)),
                ('stores', models.CharField(blank=True, max_length=255, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('developer', models.CharField(blank=True, max_length=255, null=True)),
                ('game_platform', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wishlists', to='library.platform')),
            ],
            options={
                'ordering': ['game_platform'],
                'unique_together': {('game_name', 'game_platform')},
            },
        ),
    ]
